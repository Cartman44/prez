{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aur\\\\Documents\\\\GitHub\\\\prez\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Label, BarChart, Bar, PieChart, Pie, Cell, Legend } from 'recharts';\nimport _ from 'lodash';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [activeCandidate, setActiveCandidate] = useState('victorPonta');\n  const [correlations, setCorrelations] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('correlation'); // correlation, countyRanking, candidateComparison\n  const [selectedCounty, setSelectedCounty] = useState(null);\n  const [sortBy, setSortBy] = useState('turnout'); // turnout, candidate\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Încarcă fișierele CSV folosind fetch\n        const voterResponse = await fetch(`${process.env.PUBLIC_URL}/presence_now (1).csv`);\n        const trendsResponse = await fetch(`${process.env.PUBLIC_URL}/geoMap (1).csv`);\n        if (!voterResponse.ok || !trendsResponse.ok) {\n          throw new Error('Eroare la încărcarea fișierelor CSV');\n        }\n        const voterData = await voterResponse.text();\n        const trendsData = await trendsResponse.text();\n\n        // Procesează datele\n        const processedData = processData(voterData, trendsData);\n        setData(processedData.combinedData);\n        setCorrelations(processedData.correlations);\n        setLoading(false);\n      } catch (error) {\n        console.error('Eroare la procesarea datelor:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const processData = (voterRawData, trendsRawData) => {\n    // Parse voter data\n    const parsedVoterData = Papa.parse(voterRawData, {\n      header: true,\n      skipEmptyLines: true,\n      dynamicTyping: true\n    });\n\n    // Parse Google Trends data manually pentru formatul specific\n    const lines = trendsRawData.split('\\n').filter(line => line.trim());\n\n    // Găsim linia care conține headerele (de obicei linia 3)\n    let headerLineIndex = -1;\n    for (let i = 0; i < lines.length; i++) {\n      if (lines[i].startsWith('Regiune,')) {\n        headerLineIndex = i;\n        break;\n      }\n    }\n    if (headerLineIndex === -1) {\n      console.error('Nu s-a găsit linia cu headere în fișierul geoMap');\n      return {\n        combinedData: [],\n        correlations: {}\n      };\n    }\n\n    // Extragem headerele\n    const headers = lines[headerLineIndex].split(',').map(h => h.trim());\n\n    // Datele încep după linia de headere\n    const trendsData = [];\n    for (let i = headerLineIndex + 1; i < lines.length; i++) {\n      if (!lines[i].trim()) continue;\n      const values = lines[i].split(',').map(val => val.trim());\n      if (values.length >= headers.length) {\n        const row = {\n          County: values[0].replace('Județul ', '').replace('Municipiul ', '')\n        };\n\n        // Numele candidaților din headere\n        const candidateNames = {\n          'Nicusor dan: (04.04.2025 – 04.05.2025)': 'nicusorDan',\n          'Crin Antonescu: (04.04.2025 – 04.05.2025)': 'crinAntonescu',\n          'George Simion: (04.04.2025 – 04.05.2025)': 'georgeSimion',\n          'Victor Ponta: (04.04.2025 – 04.05.2025)': 'victorPonta'\n        };\n\n        // Adăugăm datele pentru fiecare candidat\n        for (let j = 1; j < headers.length; j++) {\n          const candidateKey = candidateNames[headers[j]];\n          if (candidateKey && values[j]) {\n            // Convertim valoarea procentuală în număr\n            row[candidateKey] = parseFloat(values[j].replace(' %', ''));\n          }\n        }\n        trendsData.push(row);\n      }\n    }\n\n    // Group voter data by county\n    const voterDataByCounty = _.groupBy(parsedVoterData.data, 'Judet');\n\n    // Calculate totals for each county\n    const voterStats = {};\n    for (const county in voterDataByCounty) {\n      if (county) {\n        const countyData = voterDataByCounty[county];\n\n        // Sum up registered voters and turnout\n        const totalRegistered = _.sumBy(countyData, 'Înscriși pe liste permanente') || 0;\n        const totalLP = _.sumBy(countyData, 'LP') || 0; // Turnout count\n\n        // Calculate turnout percentage\n        const turnoutPercentage = totalRegistered > 0 ? totalLP / totalRegistered * 100 : 0;\n        voterStats[county] = {\n          totalRegistered,\n          totalLP,\n          turnoutPercentage\n        };\n      }\n    }\n\n    // Map county names\n    const countyMapping = {\n      'Alba': 'AB',\n      'Arad': 'AR',\n      'Argeș': 'AG',\n      'Bacău': 'BC',\n      'Bihor': 'BH',\n      'Bistrița-Năsăud': 'BN',\n      'Botoșani': 'BT',\n      'Brașov': 'BV',\n      'Brăila': 'BR',\n      'Buzău': 'BZ',\n      'Caraș-Severin': 'CS',\n      'Cluj': 'CJ',\n      'Constanța': 'CT',\n      'Covasna': 'CV',\n      'Călărași': 'CL',\n      'Dolj': 'DJ',\n      'Dâmbovița': 'DB',\n      'Galați': 'GL',\n      'Giurgiu': 'GR',\n      'Gorj': 'GJ',\n      'Harghita': 'HR',\n      'Hunedoara': 'HD',\n      'Ialomița': 'IL',\n      'Iași': 'IS',\n      'Ilfov': 'IF',\n      'Maramureș': 'MM',\n      'Mehedinți': 'MH',\n      'Mureș': 'MS',\n      'Neamț': 'NT',\n      'Olt': 'OT',\n      'Prahova': 'PH',\n      'Satu Mare': 'SM',\n      'Sibiu': 'SB',\n      'Suceava': 'SV',\n      'Sălaj': 'SJ',\n      'Teleorman': 'TR',\n      'Timiș': 'TM',\n      'Tulcea': 'TL',\n      'Vaslui': 'VS',\n      'Vrancea': 'VN',\n      'Vâlcea': 'VL',\n      'București': 'B'\n    };\n\n    // Combine datasets\n    const combinedData = [];\n    for (const trendsRow of trendsData) {\n      const countyName = trendsRow.County;\n      const countyCode = countyMapping[countyName];\n      if (countyCode && voterStats[countyCode]) {\n        combinedData.push({\n          county: countyName,\n          countyCode: countyCode,\n          turnoutPercentage: voterStats[countyCode].turnoutPercentage,\n          nicusorDan: trendsRow.nicusorDan,\n          crinAntonescu: trendsRow.crinAntonescu,\n          georgeSimion: trendsRow.georgeSimion,\n          victorPonta: trendsRow.victorPonta\n        });\n      }\n    }\n\n    // Calculate correlations\n    const calculateCorrelation = (x, y) => {\n      const n = x.length;\n      if (n === 0 || n !== y.length) return 0;\n      const sumX = x.reduce((a, b) => a + b, 0);\n      const sumY = y.reduce((a, b) => a + b, 0);\n      const sumXY = x.reduce((a, b, i) => a + b * y[i], 0);\n      const sumX2 = x.reduce((a, b) => a + b * b, 0);\n      const sumY2 = y.reduce((a, b) => a + b * b, 0);\n      const numerator = n * sumXY - sumX * sumY;\n      const denominator = Math.sqrt((n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY));\n      return denominator === 0 ? 0 : numerator / denominator;\n    };\n\n    // Calculate correlation for each candidate\n    const turnoutValues = combinedData.map(d => d.turnoutPercentage);\n    const candidates = ['nicusorDan', 'crinAntonescu', 'georgeSimion', 'victorPonta'];\n    const correlations = {};\n    candidates.forEach(candidate => {\n      const candidateValues = combinedData.map(d => d[candidate]);\n      correlations[candidate] = calculateCorrelation(turnoutValues, candidateValues);\n    });\n    return {\n      combinedData,\n      correlations\n    };\n  };\n\n  // Format correlation for display\n  const formatCorrelation = value => {\n    return value.toFixed(3);\n  };\n\n  // Get title for the candidate\n  const getCandidateTitle = candidate => {\n    switch (candidate) {\n      case 'nicusorDan':\n        return 'Nicușor Dan';\n      case 'crinAntonescu':\n        return 'Crin Antonescu';\n      case 'georgeSimion':\n        return 'George Simion';\n      case 'victorPonta':\n        return 'Victor Ponta';\n      default:\n        return candidate;\n    }\n  };\n\n  // Determine color for a candidate\n  const getCandidateColor = candidate => {\n    switch (candidate) {\n      case 'nicusorDan':\n        return '#8884d8';\n      case 'crinAntonescu':\n        return '#82ca9d';\n      case 'georgeSimion':\n        return '#ffc658';\n      case 'victorPonta':\n        return '#ff8042';\n      default:\n        return '#000000';\n    }\n  };\n  const handleCandidateChange = candidate => {\n    setActiveCandidate(candidate);\n  };\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n  };\n\n  // Round numbers for more readable display\n  const formatNumber = num => {\n    return num.toFixed(2);\n  };\n\n  // Sortează județele în funcție de criteriul selectat\n  const getSortedCounties = () => {\n    if (sortBy === 'turnout') {\n      return [...data].sort((a, b) => b.turnoutPercentage - a.turnoutPercentage);\n    } else {\n      return [...data].sort((a, b) => b[activeCandidate] - a[activeCandidate]);\n    }\n  };\n\n  // Tooltip personalizat pentru graficul de corelație\n  const CustomTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 border border-gray-300 rounded shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-lg\",\n          children: [data.county, \" (\", data.countyCode, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Prezen\\u021B\\u0103 la vot: \", formatNumber(data.turnoutPercentage), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [getCandidateTitle(activeCandidate), \": \", data[activeCandidate], \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n\n  // Grafic de corelație între prezența la vot și interesul de căutare\n  const renderCorrelationChart = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow bg-white p-4 rounded border border-gray-300 h-96\",\n      children: data.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          margin: {\n            top: 20,\n            right: 30,\n            bottom: 30,\n            left: 60\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"turnoutPercentage\",\n            name: \"Prezen\\u021B\\u0103 la vot\",\n            domain: [15, 35],\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              value: \"Prezen\\u021B\\u0103 la vot (%)\",\n              position: \"bottom\",\n              offset: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: activeCandidate,\n            name: getCandidateTitle(activeCandidate),\n            domain: [0, 70],\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              value: `Interes de căutare pentru ${getCandidateTitle(activeCandidate)} (%)`,\n              angle: -90,\n              position: \"left\",\n              style: {\n                textAnchor: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: getCandidateTitle(activeCandidate),\n            data: data,\n            fill: getCandidateColor(activeCandidate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex h-full items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nu s-au putut corela datele. Verific\\u0103 formatul fi\\u0219ierelor CSV.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Graficul de clasament al județelor\n  const renderCountyRankingChart = () => {\n    const sortedData = getSortedCounties().slice(0, 15); // Doar primele 15 județe\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow bg-white p-4 rounded border border-gray-300 h-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold mr-2\",\n          children: \"Sorteaz\\u0103 dup\\u0103:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline-flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSortBy('turnout'),\n            className: `px-3 py-1 rounded ${sortBy === 'turnout' ? 'bg-blue-600 text-white' : 'bg-gray-200 hover:bg-gray-300'}`,\n            children: \"Prezen\\u021B\\u0103 la vot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSortBy('candidate'),\n            className: `px-3 py-1 rounded ${sortBy === 'candidate' ? 'bg-blue-600 text-white' : 'bg-gray-200 hover:bg-gray-300'}`,\n            children: [\"Interes pentru \", getCandidateTitle(activeCandidate)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"85%\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          layout: \"vertical\",\n          data: sortedData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 60,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            domain: [0, sortBy === 'turnout' ? 35 : 70]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            dataKey: \"county\",\n            type: \"category\",\n            width: 100,\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: sortBy === 'turnout' ? 'turnoutPercentage' : activeCandidate,\n            fill: sortBy === 'turnout' ? '#4299e1' : getCandidateColor(activeCandidate),\n            name: sortBy === 'turnout' ? 'Prezență la vot (%)' : `Interes pentru ${getCandidateTitle(activeCandidate)} (%)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Obține datele pentru graficul de comparație între candidați pentru un județ selectat\n  const getCountyComparisonData = () => {\n    if (!selectedCounty) return [];\n    const county = data.find(c => c.countyCode === selectedCounty);\n    if (!county) return [];\n    return [{\n      name: 'Nicușor Dan',\n      value: county.nicusorDan,\n      color: getCandidateColor('nicusorDan')\n    }, {\n      name: 'Crin Antonescu',\n      value: county.crinAntonescu,\n      color: getCandidateColor('crinAntonescu')\n    }, {\n      name: 'George Simion',\n      value: county.georgeSimion,\n      color: getCandidateColor('georgeSimion')\n    }, {\n      name: 'Victor Ponta',\n      value: county.victorPonta,\n      color: getCandidateColor('victorPonta')\n    }];\n  };\n\n  // Grafic pentru compararea candidaților într-un județ\n  const renderCandidateComparisonChart = () => {\n    const comparisonData = getCountyComparisonData();\n    const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow bg-white p-4 rounded border border-gray-300 h-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold mr-2\",\n          children: \"Selecteaz\\u0103 un jude\\u021B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCounty || '',\n          onChange: e => setSelectedCounty(e.target.value),\n          className: \"px-3 py-1 rounded border border-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecteaz\\u0103...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), data.map(county => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: county.countyCode,\n            children: [county.county, \" (\", county.countyCode, \")\"]\n          }, county.countyCode, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), selectedCounty ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"85%\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: comparisonData,\n            cx: \"50%\",\n            cy: \"50%\",\n            labelLine: true,\n            outerRadius: 120,\n            fill: \"#8884d8\",\n            dataKey: \"value\",\n            nameKey: \"name\",\n            label: ({\n              name,\n              value\n            }) => `${name}: ${value}%`,\n            children: comparisonData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => `${value}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex h-full items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selecteaz\\u0103 un jude\\u021B pentru a vedea compara\\u021Bia \\xEEntre candida\\u021Bi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Secțiunea cu analiza pentru toate vizualizările\n  const renderAnalysisSection = () => {\n    if (viewMode === 'correlation') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 bg-white p-4 rounded border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2\",\n          children: \"Analiz\\u0103 corela\\u021Bie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: correlations.victorPonta > 0.2 ? \"Victor Ponta arată o corelație pozitivă cu prezența la vot, sugerând că zonele cu un interes mai mare de căutare pentru Ponta tind să aibă rate de participare mai ridicate.\" : correlations.victorPonta < -0.2 ? \"Victor Ponta arată o corelație negativă cu prezența la vot, sugerând că zonele cu un interes mai mare de căutare pentru Ponta tind să aibă rate de participare mai scăzute.\" : \"Victor Ponta arată o corelație pozitivă slabă (0.30) cu prezența la vot. Zonele cu un interes mai mare pentru Ponta tind să aibă o prezență la vot ușor mai ridicată.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: correlations.georgeSimion < -0.1 ? \"George Simion prezintă o corelație ușor negativă (-0.14) cu prezența la vot, sugerând că regiunile cu interes mai mare pentru Simion ar putea avea o participare electorală ceva mai scăzută.\" : \"George Simion nu prezintă aproape nicio corelație cu prezența la vot.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"Nicu\\u0219or Dan \\u0219i Crin Antonescu nu prezint\\u0103 practic nicio corela\\u021Bie cu modelele de prezen\\u021B\\u0103 la vot, suger\\xE2nd c\\u0103 popularitatea lor nu este legat\\u0103 de ratele de participare.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this);\n    } else if (viewMode === 'countyRanking') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 bg-white p-4 rounded border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2\",\n          children: \"Analiz\\u0103 jude\\u021Be:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Jude\\u021Bele cu cea mai mare prezen\\u021B\\u0103 la vot sunt \\xEEn general cele urbane \\u0219i din proximitatea capitalei. Acestea tind s\\u0103 aib\\u0103 o participare electoral\\u0103 mai activ\\u0103.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: [activeCandidate === 'victorPonta' && \"Victor Ponta are cel mai mare interes de căutare în județele din Moldova și sudul țării, zone cu tradiție pentru partidul său.\", activeCandidate === 'nicusorDan' && \"Nicușor Dan are cel mai mare interes de căutare în zonele urbane și în județe precum Vrancea și Satu Mare, deși este mai cunoscut ca politician bucureștean.\", activeCandidate === 'crinAntonescu' && \"Crin Antonescu are cel mai mare interes de căutare în județe precum Tulcea, Alba și Harghita, indicând diversitatea geografică a sprijinului său.\", activeCandidate === 'georgeSimion' && \"George Simion are cel mai mare interes de căutare în județe din vest precum Caraș-Severin și Arad, dar și în zone din sudul țării.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this);\n    } else if (viewMode === 'candidateComparison') {\n      var _data$find, _data$find2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 bg-white p-4 rounded border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2\",\n          children: \"Analiz\\u0103 comparativ\\u0103:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), selectedCounty ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [(_data$find = data.find(c => c.countyCode === selectedCounty)) === null || _data$find === void 0 ? void 0 : _data$find.county, \" are o prezen\\u021B\\u0103 la vot de \", formatNumber((_data$find2 = data.find(c => c.countyCode === selectedCounty)) === null || _data$find2 === void 0 ? void 0 : _data$find2.turnoutPercentage), \"%. Candidatul cu cel mai mare interes de c\\u0103utare \\xEEn acest jude\\u021B este \", (() => {\n            const county = data.find(c => c.countyCode === selectedCounty);\n            if (!county) return '';\n            const maxValue = Math.max(county.nicusorDan, county.crinAntonescu, county.georgeSimion, county.victorPonta);\n            if (maxValue === county.nicusorDan) return 'Nicușor Dan';\n            if (maxValue === county.crinAntonescu) return 'Crin Antonescu';\n            if (maxValue === county.georgeSimion) return 'George Simion';\n            if (maxValue === county.victorPonta) return 'Victor Ponta';\n            return '';\n          })(), \" cu \", (() => {\n            const county = data.find(c => c.countyCode === selectedCounty);\n            if (!county) return '';\n            const maxValue = Math.max(county.nicusorDan, county.crinAntonescu, county.georgeSimion, county.victorPonta);\n            return maxValue;\n          })(), \"% din c\\u0103ut\\u0103ri.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selecteaz\\u0103 un jude\\u021B pentru a vedea o analiz\\u0103 detaliat\\u0103 a interesului pentru candida\\u021Bi.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"La nivel na\\u021Bional, Crin Antonescu \\u0219i Nicu\\u0219or Dan au cele mai multe c\\u0103ut\\u0103ri, \\xEEn timp ce Victor Ponta are cel mai puternic raport \\xEEntre c\\u0103ut\\u0103ri \\u0219i prezen\\u021Ba la vot.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Se \\xEEncarc\\u0103 datele...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: [\"Eroare: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Verific\\u0103 dac\\u0103 fi\\u0219ierele CSV sunt \\xEEn folderul public \\u0219i numele lor sunt corecte.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col p-4 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Dashboard Analiz\\u0103 Electoral\\u0103: Prezen\\u021Ba la vot \\u0219i Interesul de c\\u0103utare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded border border-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold mr-4\",\n          children: \"Selecteaz\\u0103 candidatul:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: ['victorPonta', 'nicusorDan', 'crinAntonescu', 'georgeSimion'].map(candidate => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCandidateChange(candidate),\n            className: `px-3 py-1 rounded ${activeCandidate === candidate ? 'bg-blue-600 text-white' : 'bg-gray-200 hover:bg-gray-300'}`,\n            children: getCandidateTitle(candidate)\n          }, candidate, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold mr-4\",\n          children: \"Tip vizualizare:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleViewModeChange('correlation'),\n            className: `px-3 py-1 rounded ${viewMode === 'correlation' ? 'bg-blue-600 text-white' : 'bg-gray-200 hover:bg-gray-300'}`,\n            children: \"Corela\\u021Bie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleViewModeChange('countyRanking'),\n            className: `px-3 py-1 rounded ${viewMode === 'countyRanking' ? 'bg-blue-600 text-white' : 'bg-gray-200 hover:bg-gray-300'}`,\n            children: \"Clasament jude\\u021Be\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleViewModeChange('candidateComparison'),\n            className: `px-3 py-1 rounded ${viewMode === 'candidateComparison' ? 'bg-blue-600 text-white' : 'bg-gray-200 hover:bg-gray-300'}`,\n            children: \"Compara\\u021Bie candida\\u021Bi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }, this), correlations[activeCandidate] !== undefined && viewMode === 'correlation' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"Coeficient de corela\\u021Bie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${correlations[activeCandidate] > 0.2 ? 'text-green-600 font-bold' : correlations[activeCandidate] < -0.2 ? 'text-red-600 font-bold' : 'text-gray-600'}`,\n          children: formatCorrelation(correlations[activeCandidate])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this), correlations[activeCandidate] > 0.2 ? ' (Corelație pozitivă puternică)' : correlations[activeCandidate] < -0.2 ? ' (Corelație negativă puternică)' : ' (Corelație slabă/inexistentă)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this), viewMode === 'correlation' && renderCorrelationChart(), viewMode === 'countyRanking' && renderCountyRankingChart(), viewMode === 'candidateComparison' && renderCandidateComparisonChart(), renderAnalysisSection()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 585,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"igqm59Fp0r9mKyWj2I4YQJ2ey+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Label","BarChart","Bar","PieChart","Pie","Cell","Legend","_","Papa","jsxDEV","_jsxDEV","App","_s","data","setData","activeCandidate","setActiveCandidate","correlations","setCorrelations","loading","setLoading","error","setError","viewMode","setViewMode","selectedCounty","setSelectedCounty","sortBy","setSortBy","fetchData","voterResponse","fetch","process","env","PUBLIC_URL","trendsResponse","ok","Error","voterData","text","trendsData","processedData","processData","combinedData","console","message","voterRawData","trendsRawData","parsedVoterData","parse","header","skipEmptyLines","dynamicTyping","lines","split","filter","line","trim","headerLineIndex","i","length","startsWith","headers","map","h","values","val","row","County","replace","candidateNames","j","candidateKey","parseFloat","push","voterDataByCounty","groupBy","voterStats","county","countyData","totalRegistered","sumBy","totalLP","turnoutPercentage","countyMapping","trendsRow","countyName","countyCode","nicusorDan","crinAntonescu","georgeSimion","victorPonta","calculateCorrelation","x","y","n","sumX","reduce","a","b","sumY","sumXY","sumX2","sumY2","numerator","denominator","Math","sqrt","turnoutValues","d","candidates","forEach","candidate","candidateValues","formatCorrelation","value","toFixed","getCandidateTitle","getCandidateColor","handleCandidateChange","handleViewModeChange","mode","formatNumber","num","getSortedCounties","sort","CustomTooltip","active","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCorrelationChart","width","height","margin","top","right","bottom","left","strokeDasharray","type","dataKey","name","domain","position","offset","angle","style","textAnchor","content","fill","renderCountyRankingChart","sortedData","slice","onClick","layout","tick","fontSize","getCountyComparisonData","find","c","color","renderCandidateComparisonChart","comparisonData","COLORS","onChange","e","target","cx","cy","labelLine","outerRadius","nameKey","label","entry","index","formatter","renderAnalysisSection","_data$find","_data$find2","maxValue","max","undefined","_c","$RefreshReg$"],"sources":["C:/Users/Aur/Documents/GitHub/prez/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, \n  Tooltip, ResponsiveContainer, Label, BarChart, Bar,\n  PieChart, Pie, Cell, Legend\n} from 'recharts';\nimport _ from 'lodash';\nimport Papa from 'papaparse';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [activeCandidate, setActiveCandidate] = useState('victorPonta');\n  const [correlations, setCorrelations] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('correlation');  // correlation, countyRanking, candidateComparison\n  const [selectedCounty, setSelectedCounty] = useState(null);\n  const [sortBy, setSortBy] = useState('turnout'); // turnout, candidate\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Încarcă fișierele CSV folosind fetch\n        const voterResponse = await fetch(`${process.env.PUBLIC_URL}/presence_now (1).csv`);\n        const trendsResponse = await fetch(`${process.env.PUBLIC_URL}/geoMap (1).csv`);\n        \n        if (!voterResponse.ok || !trendsResponse.ok) {\n          throw new Error('Eroare la încărcarea fișierelor CSV');\n        }\n        \n        const voterData = await voterResponse.text();\n        const trendsData = await trendsResponse.text();\n        \n        // Procesează datele\n        const processedData = processData(voterData, trendsData);\n        setData(processedData.combinedData);\n        setCorrelations(processedData.correlations);\n        setLoading(false);\n      } catch (error) {\n        console.error('Eroare la procesarea datelor:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, []);\n  \n  const processData = (voterRawData, trendsRawData) => {\n    // Parse voter data\n    const parsedVoterData = Papa.parse(voterRawData, {\n      header: true,\n      skipEmptyLines: true,\n      dynamicTyping: true\n    });\n    \n    // Parse Google Trends data manually pentru formatul specific\n    const lines = trendsRawData.split('\\n').filter(line => line.trim());\n    \n    // Găsim linia care conține headerele (de obicei linia 3)\n    let headerLineIndex = -1;\n    for (let i = 0; i < lines.length; i++) {\n      if (lines[i].startsWith('Regiune,')) {\n        headerLineIndex = i;\n        break;\n      }\n    }\n    \n    if (headerLineIndex === -1) {\n      console.error('Nu s-a găsit linia cu headere în fișierul geoMap');\n      return { combinedData: [], correlations: {} };\n    }\n    \n    // Extragem headerele\n    const headers = lines[headerLineIndex].split(',').map(h => h.trim());\n    \n    // Datele încep după linia de headere\n    const trendsData = [];\n    for (let i = headerLineIndex + 1; i < lines.length; i++) {\n      if (!lines[i].trim()) continue;\n      \n      const values = lines[i].split(',').map(val => val.trim());\n      if (values.length >= headers.length) {\n        const row = {\n          County: values[0].replace('Județul ', '').replace('Municipiul ', '')\n        };\n        \n        // Numele candidaților din headere\n        const candidateNames = {\n          'Nicusor dan: (04.04.2025 – 04.05.2025)': 'nicusorDan',\n          'Crin Antonescu: (04.04.2025 – 04.05.2025)': 'crinAntonescu',\n          'George Simion: (04.04.2025 – 04.05.2025)': 'georgeSimion',\n          'Victor Ponta: (04.04.2025 – 04.05.2025)': 'victorPonta'\n        };\n        \n        // Adăugăm datele pentru fiecare candidat\n        for (let j = 1; j < headers.length; j++) {\n          const candidateKey = candidateNames[headers[j]];\n          if (candidateKey && values[j]) {\n            // Convertim valoarea procentuală în număr\n            row[candidateKey] = parseFloat(values[j].replace(' %', ''));\n          }\n        }\n        \n        trendsData.push(row);\n      }\n    }\n    \n    // Group voter data by county\n    const voterDataByCounty = _.groupBy(parsedVoterData.data, 'Judet');\n    \n    // Calculate totals for each county\n    const voterStats = {};\n    for (const county in voterDataByCounty) {\n      if (county) {\n        const countyData = voterDataByCounty[county];\n        \n        // Sum up registered voters and turnout\n        const totalRegistered = _.sumBy(countyData, 'Înscriși pe liste permanente') || 0;\n        const totalLP = _.sumBy(countyData, 'LP') || 0; // Turnout count\n        \n        // Calculate turnout percentage\n        const turnoutPercentage = totalRegistered > 0 ? (totalLP / totalRegistered) * 100 : 0;\n        \n        voterStats[county] = {\n          totalRegistered,\n          totalLP,\n          turnoutPercentage\n        };\n      }\n    }\n    \n    // Map county names\n    const countyMapping = {\n      'Alba': 'AB',\n      'Arad': 'AR',\n      'Argeș': 'AG',\n      'Bacău': 'BC',\n      'Bihor': 'BH',\n      'Bistrița-Năsăud': 'BN',\n      'Botoșani': 'BT',\n      'Brașov': 'BV',\n      'Brăila': 'BR',\n      'Buzău': 'BZ',\n      'Caraș-Severin': 'CS',\n      'Cluj': 'CJ',\n      'Constanța': 'CT',\n      'Covasna': 'CV',\n      'Călărași': 'CL',\n      'Dolj': 'DJ',\n      'Dâmbovița': 'DB',\n      'Galați': 'GL',\n      'Giurgiu': 'GR',\n      'Gorj': 'GJ',\n      'Harghita': 'HR',\n      'Hunedoara': 'HD',\n      'Ialomița': 'IL',\n      'Iași': 'IS',\n      'Ilfov': 'IF',\n      'Maramureș': 'MM',\n      'Mehedinți': 'MH',\n      'Mureș': 'MS',\n      'Neamț': 'NT',\n      'Olt': 'OT',\n      'Prahova': 'PH',\n      'Satu Mare': 'SM',\n      'Sibiu': 'SB',\n      'Suceava': 'SV',\n      'Sălaj': 'SJ',\n      'Teleorman': 'TR',\n      'Timiș': 'TM',\n      'Tulcea': 'TL',\n      'Vaslui': 'VS',\n      'Vrancea': 'VN',\n      'Vâlcea': 'VL',\n      'București': 'B'\n    };\n    \n    // Combine datasets\n    const combinedData = [];\n    for (const trendsRow of trendsData) {\n      const countyName = trendsRow.County;\n      const countyCode = countyMapping[countyName];\n      \n      if (countyCode && voterStats[countyCode]) {\n        combinedData.push({\n          county: countyName,\n          countyCode: countyCode,\n          turnoutPercentage: voterStats[countyCode].turnoutPercentage,\n          nicusorDan: trendsRow.nicusorDan,\n          crinAntonescu: trendsRow.crinAntonescu,\n          georgeSimion: trendsRow.georgeSimion, \n          victorPonta: trendsRow.victorPonta\n        });\n      }\n    }\n    \n    // Calculate correlations\n    const calculateCorrelation = (x, y) => {\n      const n = x.length;\n      if (n === 0 || n !== y.length) return 0;\n      \n      const sumX = x.reduce((a, b) => a + b, 0);\n      const sumY = y.reduce((a, b) => a + b, 0);\n      const sumXY = x.reduce((a, b, i) => a + b * y[i], 0);\n      const sumX2 = x.reduce((a, b) => a + b * b, 0);\n      const sumY2 = y.reduce((a, b) => a + b * b, 0);\n      \n      const numerator = n * sumXY - sumX * sumY;\n      const denominator = Math.sqrt((n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY));\n      \n      return denominator === 0 ? 0 : numerator / denominator;\n    };\n    \n    // Calculate correlation for each candidate\n    const turnoutValues = combinedData.map(d => d.turnoutPercentage);\n    const candidates = ['nicusorDan', 'crinAntonescu', 'georgeSimion', 'victorPonta'];\n    const correlations = {};\n    \n    candidates.forEach(candidate => {\n      const candidateValues = combinedData.map(d => d[candidate]);\n      correlations[candidate] = calculateCorrelation(turnoutValues, candidateValues);\n    });\n    \n    return { combinedData, correlations };\n  };\n\n  // Format correlation for display\n  const formatCorrelation = (value) => {\n    return value.toFixed(3);\n  };\n  \n  // Get title for the candidate\n  const getCandidateTitle = (candidate) => {\n    switch(candidate) {\n      case 'nicusorDan': return 'Nicușor Dan';\n      case 'crinAntonescu': return 'Crin Antonescu';\n      case 'georgeSimion': return 'George Simion';\n      case 'victorPonta': return 'Victor Ponta';\n      default: return candidate;\n    }\n  };\n  \n  // Determine color for a candidate\n  const getCandidateColor = (candidate) => {\n    switch(candidate) {\n      case 'nicusorDan': return '#8884d8';\n      case 'crinAntonescu': return '#82ca9d';\n      case 'georgeSimion': return '#ffc658';\n      case 'victorPonta': return '#ff8042';\n      default: return '#000000';\n    }\n  };\n  \n  const handleCandidateChange = (candidate) => {\n    setActiveCandidate(candidate);\n  };\n\n  const handleViewModeChange = (mode) => {\n    setViewMode(mode);\n  };\n\n  // Round numbers for more readable display\n  const formatNumber = (num) => {\n    return num.toFixed(2);\n  };\n  \n  // Sortează județele în funcție de criteriul selectat\n  const getSortedCounties = () => {\n    if (sortBy === 'turnout') {\n      return [...data].sort((a, b) => b.turnoutPercentage - a.turnoutPercentage);\n    } else {\n      return [...data].sort((a, b) => b[activeCandidate] - a[activeCandidate]);\n    }\n  };\n  \n  // Tooltip personalizat pentru graficul de corelație\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-4 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-bold text-lg\">{data.county} ({data.countyCode})</p>\n          <p>Prezență la vot: {formatNumber(data.turnoutPercentage)}%</p>\n          <p>{getCandidateTitle(activeCandidate)}: {data[activeCandidate]}%</p>\n        </div>\n      );\n    }\n    return null;\n  };\n  \n  // Grafic de corelație între prezența la vot și interesul de căutare\n  const renderCorrelationChart = () => {\n    return (\n      <div className=\"flex-grow bg-white p-4 rounded border border-gray-300 h-96\">\n        {data.length > 0 ? (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <ScatterChart\n              margin={{ top: 20, right: 30, bottom: 30, left: 60 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis \n                type=\"number\" \n                dataKey=\"turnoutPercentage\" \n                name=\"Prezență la vot\" \n                domain={[15, 35]}\n              >\n                <Label value=\"Prezență la vot (%)\" position=\"bottom\" offset={0} />\n              </XAxis>\n              <YAxis \n                type=\"number\" \n                dataKey={activeCandidate} \n                name={getCandidateTitle(activeCandidate)}\n                domain={[0, 70]}\n              >\n                <Label \n                  value={`Interes de căutare pentru ${getCandidateTitle(activeCandidate)} (%)`} \n                  angle={-90} \n                  position=\"left\" \n                  style={{ textAnchor: 'middle' }} \n                />\n              </YAxis>\n              <Tooltip content={<CustomTooltip />} />\n              <Scatter \n                name={getCandidateTitle(activeCandidate)} \n                data={data} \n                fill={getCandidateColor(activeCandidate)}\n              />\n            </ScatterChart>\n          </ResponsiveContainer>\n        ) : (\n          <div className=\"flex h-full items-center justify-center\">\n            <p>Nu s-au putut corela datele. Verifică formatul fișierelor CSV.</p>\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Graficul de clasament al județelor\n  const renderCountyRankingChart = () => {\n    const sortedData = getSortedCounties().slice(0, 15); // Doar primele 15 județe\n    \n    return (\n      <div className=\"flex-grow bg-white p-4 rounded border border-gray-300 h-96\">\n        <div className=\"mb-3\">\n          <span className=\"font-semibold mr-2\">Sortează după:</span>\n          <div className=\"inline-flex space-x-2\">\n            <button\n              onClick={() => setSortBy('turnout')}\n              className={`px-3 py-1 rounded ${\n                sortBy === 'turnout' \n                  ? 'bg-blue-600 text-white' \n                  : 'bg-gray-200 hover:bg-gray-300'\n              }`}\n            >\n              Prezență la vot\n            </button>\n            <button\n              onClick={() => setSortBy('candidate')}\n              className={`px-3 py-1 rounded ${\n                sortBy === 'candidate' \n                  ? 'bg-blue-600 text-white' \n                  : 'bg-gray-200 hover:bg-gray-300'\n              }`}\n            >\n              Interes pentru {getCandidateTitle(activeCandidate)}\n            </button>\n          </div>\n        </div>\n        \n        <ResponsiveContainer width=\"100%\" height=\"85%\">\n          <BarChart\n            layout=\"vertical\"\n            data={sortedData}\n            margin={{ top: 5, right: 30, left: 60, bottom: 5 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis type=\"number\" domain={[0, sortBy === 'turnout' ? 35 : 70]} />\n            <YAxis \n              dataKey=\"county\" \n              type=\"category\" \n              width={100} \n              tick={{ fontSize: 12 }} \n            />\n            <Tooltip />\n            <Bar \n              dataKey={sortBy === 'turnout' ? 'turnoutPercentage' : activeCandidate} \n              fill={sortBy === 'turnout' ? '#4299e1' : getCandidateColor(activeCandidate)} \n              name={sortBy === 'turnout' ? 'Prezență la vot (%)' : `Interes pentru ${getCandidateTitle(activeCandidate)} (%)`}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n  \n  // Obține datele pentru graficul de comparație între candidați pentru un județ selectat\n  const getCountyComparisonData = () => {\n    if (!selectedCounty) return [];\n    \n    const county = data.find(c => c.countyCode === selectedCounty);\n    if (!county) return [];\n    \n    return [\n      { name: 'Nicușor Dan', value: county.nicusorDan, color: getCandidateColor('nicusorDan') },\n      { name: 'Crin Antonescu', value: county.crinAntonescu, color: getCandidateColor('crinAntonescu') },\n      { name: 'George Simion', value: county.georgeSimion, color: getCandidateColor('georgeSimion') },\n      { name: 'Victor Ponta', value: county.victorPonta, color: getCandidateColor('victorPonta') }\n    ];\n  };\n  \n  // Grafic pentru compararea candidaților într-un județ\n  const renderCandidateComparisonChart = () => {\n    const comparisonData = getCountyComparisonData();\n    const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042'];\n    \n    return (\n      <div className=\"flex-grow bg-white p-4 rounded border border-gray-300 h-96\">\n        <div className=\"mb-3\">\n          <span className=\"font-semibold mr-2\">Selectează un județ:</span>\n          <select \n            value={selectedCounty || ''} \n            onChange={(e) => setSelectedCounty(e.target.value)}\n            className=\"px-3 py-1 rounded border border-gray-300\"\n          >\n            <option value=\"\">Selectează...</option>\n            {data.map(county => (\n              <option key={county.countyCode} value={county.countyCode}>\n                {county.county} ({county.countyCode})\n              </option>\n            ))}\n          </select>\n        </div>\n        \n        {selectedCounty ? (\n          <ResponsiveContainer width=\"100%\" height=\"85%\">\n            <PieChart>\n              <Pie\n                data={comparisonData}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={true}\n                outerRadius={120}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                nameKey=\"name\"\n                label={({name, value}) => `${name}: ${value}%`}\n              >\n                {comparisonData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip formatter={(value) => `${value}%`} />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        ) : (\n          <div className=\"flex h-full items-center justify-center\">\n            <p>Selectează un județ pentru a vedea comparația între candidați</p>\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Secțiunea cu analiza pentru toate vizualizările\n  const renderAnalysisSection = () => {\n    if (viewMode === 'correlation') {\n      return (\n        <div className=\"mt-4 bg-white p-4 rounded border border-gray-300\">\n          <h3 className=\"font-bold mb-2\">Analiză corelație:</h3>\n          <p>\n            {correlations.victorPonta > 0.2 ? \n              \"Victor Ponta arată o corelație pozitivă cu prezența la vot, sugerând că zonele cu un interes mai mare de căutare pentru Ponta tind să aibă rate de participare mai ridicate.\" :\n             correlations.victorPonta < -0.2 ? \n              \"Victor Ponta arată o corelație negativă cu prezența la vot, sugerând că zonele cu un interes mai mare de căutare pentru Ponta tind să aibă rate de participare mai scăzute.\" :\n              \"Victor Ponta arată o corelație pozitivă slabă (0.30) cu prezența la vot. Zonele cu un interes mai mare pentru Ponta tind să aibă o prezență la vot ușor mai ridicată.\"\n            }\n          </p>\n          <p className=\"mt-2\">\n            {correlations.georgeSimion < -0.1 ? \n              \"George Simion prezintă o corelație ușor negativă (-0.14) cu prezența la vot, sugerând că regiunile cu interes mai mare pentru Simion ar putea avea o participare electorală ceva mai scăzută.\" :\n              \"George Simion nu prezintă aproape nicio corelație cu prezența la vot.\"\n            }\n          </p>\n          <p className=\"mt-2\">\n            Nicușor Dan și Crin Antonescu nu prezintă practic nicio corelație cu modelele de prezență la vot, sugerând că popularitatea lor nu este legată de ratele de participare.\n          </p>\n        </div>\n      );\n    } else if (viewMode === 'countyRanking') {\n      return (\n        <div className=\"mt-4 bg-white p-4 rounded border border-gray-300\">\n          <h3 className=\"font-bold mb-2\">Analiză județe:</h3>\n          <p>\n            Județele cu cea mai mare prezență la vot sunt în general cele urbane și din proximitatea capitalei.\n            Acestea tind să aibă o participare electorală mai activă.\n          </p>\n          <p className=\"mt-2\">\n            {activeCandidate === 'victorPonta' && \n              \"Victor Ponta are cel mai mare interes de căutare în județele din Moldova și sudul țării, zone cu tradiție pentru partidul său.\"}\n            {activeCandidate === 'nicusorDan' && \n              \"Nicușor Dan are cel mai mare interes de căutare în zonele urbane și în județe precum Vrancea și Satu Mare, deși este mai cunoscut ca politician bucureștean.\"}\n            {activeCandidate === 'crinAntonescu' && \n              \"Crin Antonescu are cel mai mare interes de căutare în județe precum Tulcea, Alba și Harghita, indicând diversitatea geografică a sprijinului său.\"}\n            {activeCandidate === 'georgeSimion' && \n              \"George Simion are cel mai mare interes de căutare în județe din vest precum Caraș-Severin și Arad, dar și în zone din sudul țării.\"}\n          </p>\n        </div>\n      );\n    } else if (viewMode === 'candidateComparison') {\n      return (\n        <div className=\"mt-4 bg-white p-4 rounded border border-gray-300\">\n          <h3 className=\"font-bold mb-2\">Analiză comparativă:</h3>\n          {selectedCounty ? (\n            <p>\n              {data.find(c => c.countyCode === selectedCounty)?.county} are o prezență la vot de {formatNumber(data.find(c => c.countyCode === selectedCounty)?.turnoutPercentage)}%. \n              Candidatul cu cel mai mare interes de căutare în acest județ este {\n                (() => {\n                  const county = data.find(c => c.countyCode === selectedCounty);\n                  if (!county) return '';\n                  \n                  const maxValue = Math.max(\n                    county.nicusorDan, \n                    county.crinAntonescu, \n                    county.georgeSimion, \n                    county.victorPonta\n                  );\n                  \n                  if (maxValue === county.nicusorDan) return 'Nicușor Dan';\n                  if (maxValue === county.crinAntonescu) return 'Crin Antonescu';\n                  if (maxValue === county.georgeSimion) return 'George Simion';\n                  if (maxValue === county.victorPonta) return 'Victor Ponta';\n                  return '';\n                })()\n              } cu {\n                (() => {\n                  const county = data.find(c => c.countyCode === selectedCounty);\n                  if (!county) return '';\n                  \n                  const maxValue = Math.max(\n                    county.nicusorDan, \n                    county.crinAntonescu, \n                    county.georgeSimion, \n                    county.victorPonta\n                  );\n                  \n                  return maxValue;\n                })()\n              }% din căutări.\n            </p>\n          ) : (\n            <p>Selectează un județ pentru a vedea o analiză detaliată a interesului pentru candidați.</p>\n          )}\n          <p className=\"mt-2\">\n            La nivel național, Crin Antonescu și Nicușor Dan au cele mai multe căutări, în timp ce Victor Ponta are cel mai puternic raport între căutări și prezența la vot.\n          </p>\n        </div>\n      );\n    }\n    \n    return null;\n  };\n  \n  if (loading) {\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <p>Se încarcă datele...</p>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <p className=\"text-red-500\">Eroare: {error}</p>\n        <p>Verifică dacă fișierele CSV sunt în folderul public și numele lor sunt corecte.</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"flex flex-col p-4 space-y-4\">\n      <h1 className=\"text-2xl font-bold\">Dashboard Analiză Electorală: Prezența la vot și Interesul de căutare</h1>\n      \n      <div className=\"bg-white p-4 rounded border border-gray-300\">\n        <div className=\"flex items-center mb-4\">\n          <span className=\"font-semibold mr-4\">Selectează candidatul:</span>\n          <div className=\"flex space-x-2\">\n            {['victorPonta', 'nicusorDan', 'crinAntonescu', 'georgeSimion'].map((candidate) => (\n              <button\n                key={candidate}\n                onClick={() => handleCandidateChange(candidate)}\n                className={`px-3 py-1 rounded ${\n                  activeCandidate === candidate \n                    ? 'bg-blue-600 text-white' \n                    : 'bg-gray-200 hover:bg-gray-300'\n                }`}\n              >\n                {getCandidateTitle(candidate)}\n              </button>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center\">\n          <span className=\"font-semibold mr-4\">Tip vizualizare:</span>\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={() => handleViewModeChange('correlation')}\n              className={`px-3 py-1 rounded ${\n                viewMode === 'correlation' \n                  ? 'bg-blue-600 text-white' \n                  : 'bg-gray-200 hover:bg-gray-300'\n              }`}\n            >\n              Corelație\n            </button>\n            <button\n              onClick={() => handleViewModeChange('countyRanking')}\n              className={`px-3 py-1 rounded ${\n                viewMode === 'countyRanking' \n                  ? 'bg-blue-600 text-white' \n                  : 'bg-gray-200 hover:bg-gray-300'\n              }`}\n            >\n              Clasament județe\n            </button>\n            <button\n              onClick={() => handleViewModeChange('candidateComparison')}\n              className={`px-3 py-1 rounded ${\n                viewMode === 'candidateComparison' \n                  ? 'bg-blue-600 text-white' \n                  : 'bg-gray-200 hover:bg-gray-300'\n              }`}\n            >\n              Comparație candidați\n            </button>\n          </div>\n        </div>\n        \n        {correlations[activeCandidate] !== undefined && viewMode === 'correlation' && (\n          <div className=\"mt-3\">\n            <span className=\"font-semibold\">Coeficient de corelație:</span>{' '}\n            <span className={`${\n              correlations[activeCandidate] > 0.2 ? 'text-green-600 font-bold' : \n              correlations[activeCandidate] < -0.2 ? 'text-red-600 font-bold' : \n              'text-gray-600'\n            }`}>\n              {formatCorrelation(correlations[activeCandidate])}\n            </span>\n            {correlations[activeCandidate] > 0.2 ? \n              ' (Corelație pozitivă puternică)' : \n              correlations[activeCandidate] < -0.2 ? \n              ' (Corelație negativă puternică)' : \n              ' (Corelație slabă/inexistentă)'}\n          </div>\n        )}\n      </div>\n      \n      {viewMode === 'correlation' && renderCorrelationChart()}\n      {viewMode === 'countyRanking' && renderCountyRankingChart()}\n      {viewMode === 'candidateComparison' && renderCandidateComparisonChart()}\n      \n      {renderAnalysisSection()}\n    </div>\n  );\n}\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}