{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aur\\\\Documents\\\\GitHub\\\\prez\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\nimport _ from 'lodash';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [activeCandidate, setActiveCandidate] = useState('victorPonta');\n  const [correlations, setCorrelations] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Încarcă fișierele CSV folosind fetch\n        const voterResponse = await fetch('/presence_now (1).csv');\n        const trendsResponse = await fetch('/geoMap (1).csv');\n        if (!voterResponse.ok || !trendsResponse.ok) {\n          throw new Error('Eroare la încărcarea fișierelor CSV');\n        }\n        const voterData = await voterResponse.text();\n        const trendsData = await trendsResponse.text();\n\n        // Procesează datele\n        const processedData = processData(voterData, trendsData);\n        setData(processedData.combinedData);\n        setCorrelations(processedData.correlations);\n        setLoading(false);\n      } catch (error) {\n        console.error('Eroare la procesarea datelor:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const processData = (voterRawData, trendsRawData) => {\n    // Parse voter data\n    const parsedVoterData = Papa.parse(voterRawData, {\n      header: true,\n      skipEmptyLines: true,\n      dynamicTyping: true\n    });\n\n    // Parse Google Trends data manually pentru formatul specific\n    const lines = trendsRawData.split('\\n').filter(line => line.trim());\n\n    // Găsim linia care conține headerele (de obicei linia 3)\n    let headerLineIndex = -1;\n    for (let i = 0; i < lines.length; i++) {\n      if (lines[i].startsWith('Regiune,')) {\n        headerLineIndex = i;\n        break;\n      }\n    }\n    if (headerLineIndex === -1) {\n      console.error('Nu s-a găsit linia cu headere în fișierul geoMap');\n      return {\n        combinedData: [],\n        correlations: {}\n      };\n    }\n\n    // Extragem headerele\n    const headers = lines[headerLineIndex].split(',').map(h => h.trim());\n\n    // Datele încep după linia de headere\n    const trendsData = [];\n    for (let i = headerLineIndex + 1; i < lines.length; i++) {\n      if (!lines[i].trim()) continue;\n      const values = lines[i].split(',').map(val => val.trim());\n      if (values.length >= headers.length) {\n        const row = {\n          County: values[0].replace('Județul ', '').replace('Municipiul ', '')\n        };\n\n        // Numele candidaților din headere\n        const candidateNames = {\n          'Nicusor dan: (04.04.2025 – 04.05.2025)': 'nicusorDan',\n          'Crin Antonescu: (04.04.2025 – 04.05.2025)': 'crinAntonescu',\n          'George Simion: (04.04.2025 – 04.05.2025)': 'georgeSimion',\n          'Victor Ponta: (04.04.2025 – 04.05.2025)': 'victorPonta'\n        };\n\n        // Adăugăm datele pentru fiecare candidat\n        for (let j = 1; j < headers.length; j++) {\n          const candidateKey = candidateNames[headers[j]];\n          if (candidateKey && values[j]) {\n            // Convertim valoarea procentuală în număr\n            row[candidateKey] = parseFloat(values[j].replace(' %', ''));\n          }\n        }\n        trendsData.push(row);\n      }\n    }\n\n    // Group voter data by county\n    const voterDataByCounty = _.groupBy(parsedVoterData.data, 'Judet');\n\n    // Calculate totals for each county\n    const voterStats = {};\n    for (const county in voterDataByCounty) {\n      if (county) {\n        const countyData = voterDataByCounty[county];\n\n        // Sum up registered voters and turnout\n        const totalRegistered = _.sumBy(countyData, 'Înscriși pe liste permanente') || 0;\n        const totalLP = _.sumBy(countyData, 'LP') || 0; // Turnout count\n\n        // Calculate turnout percentage\n        const turnoutPercentage = totalRegistered > 0 ? totalLP / totalRegistered * 100 : 0;\n        voterStats[county] = {\n          totalRegistered,\n          totalLP,\n          turnoutPercentage\n        };\n      }\n    }\n\n    // Map county names\n    const countyMapping = {\n      'Alba': 'AB',\n      'Arad': 'AR',\n      'Argeș': 'AG',\n      'Bacău': 'BC',\n      'Bihor': 'BH',\n      'Bistrița-Năsăud': 'BN',\n      'Botoșani': 'BT',\n      'Brașov': 'BV',\n      'Brăila': 'BR',\n      'Buzău': 'BZ',\n      'Caraș-Severin': 'CS',\n      'Cluj': 'CJ',\n      'Constanța': 'CT',\n      'Covasna': 'CV',\n      'Călărași': 'CL',\n      'Dolj': 'DJ',\n      'Dâmbovița': 'DB',\n      'Galați': 'GL',\n      'Giurgiu': 'GR',\n      'Gorj': 'GJ',\n      'Harghita': 'HR',\n      'Hunedoara': 'HD',\n      'Ialomița': 'IL',\n      'Iași': 'IS',\n      'Ilfov': 'IF',\n      'Maramureș': 'MM',\n      'Mehedinți': 'MH',\n      'Mureș': 'MS',\n      'Neamț': 'NT',\n      'Olt': 'OT',\n      'Prahova': 'PH',\n      'Satu Mare': 'SM',\n      'Sibiu': 'SB',\n      'Suceava': 'SV',\n      'Sălaj': 'SJ',\n      'Teleorman': 'TR',\n      'Timiș': 'TM',\n      'Tulcea': 'TL',\n      'Vaslui': 'VS',\n      'Vrancea': 'VN',\n      'Vâlcea': 'VL',\n      'București': 'B'\n    };\n\n    // Combine datasets\n    const combinedData = [];\n    for (const trendsRow of trendsData) {\n      const countyName = trendsRow.County;\n      const countyCode = countyMapping[countyName];\n      if (countyCode && voterStats[countyCode]) {\n        combinedData.push({\n          county: countyName,\n          countyCode: countyCode,\n          turnoutPercentage: voterStats[countyCode].turnoutPercentage,\n          nicusorDan: trendsRow.nicusorDan,\n          crinAntonescu: trendsRow.crinAntonescu,\n          georgeSimion: trendsRow.georgeSimion,\n          victorPonta: trendsRow.victorPonta\n        });\n      }\n    }\n\n    // Calculate correlations\n    const calculateCorrelation = (x, y) => {\n      const n = x.length;\n      if (n === 0 || n !== y.length) return 0;\n      const sumX = x.reduce((a, b) => a + b, 0);\n      const sumY = y.reduce((a, b) => a + b, 0);\n      const sumXY = x.reduce((a, b, i) => a + b * y[i], 0);\n      const sumX2 = x.reduce((a, b) => a + b * b, 0);\n      const sumY2 = y.reduce((a, b) => a + b * b, 0);\n      const numerator = n * sumXY - sumX * sumY;\n      const denominator = Math.sqrt((n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY));\n      return denominator === 0 ? 0 : numerator / denominator;\n    };\n\n    // Calculate correlation for each candidate\n    const turnoutValues = combinedData.map(d => d.turnoutPercentage);\n    const candidates = ['nicusorDan', 'crinAntonescu', 'georgeSimion', 'victorPonta'];\n    const correlations = {};\n    candidates.forEach(candidate => {\n      const candidateValues = combinedData.map(d => d[candidate]);\n      correlations[candidate] = calculateCorrelation(turnoutValues, candidateValues);\n    });\n    return {\n      combinedData,\n      correlations\n    };\n  };\n\n  // Format correlation for display\n  const formatCorrelation = value => {\n    return value.toFixed(3);\n  };\n\n  // Get title for the candidate\n  const getCandidateTitle = candidate => {\n    switch (candidate) {\n      case 'nicusorDan':\n        return 'Nicușor Dan';\n      case 'crinAntonescu':\n        return 'Crin Antonescu';\n      case 'georgeSimion':\n        return 'George Simion';\n      case 'victorPonta':\n        return 'Victor Ponta';\n      default:\n        return candidate;\n    }\n  };\n\n  // Determine color for a candidate\n  const getCandidateColor = candidate => {\n    switch (candidate) {\n      case 'nicusorDan':\n        return '#8884d8';\n      case 'crinAntonescu':\n        return '#82ca9d';\n      case 'georgeSimion':\n        return '#ffc658';\n      case 'victorPonta':\n        return '#ff8042';\n      default:\n        return '#000000';\n    }\n  };\n  const handleCandidateChange = candidate => {\n    setActiveCandidate(candidate);\n  };\n\n  // Round numbers for more readable display\n  const formatNumber = num => {\n    return num.toFixed(2);\n  };\n  const CustomTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 border border-gray-300 rounded shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-lg\",\n          children: [data.county, \" (\", data.countyCode, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Prezen\\u021B\\u0103 la vot: \", formatNumber(data.turnoutPercentage), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [getCandidateTitle(activeCandidate), \": \", data[activeCandidate], \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Se \\xEEncarc\\u0103 datele...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: [\"Eroare: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Verific\\u0103 dac\\u0103 fi\\u0219ierele CSV sunt \\xEEn folderul public \\u0219i numele lor sunt corecte.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col p-4 h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Corela\\u021Bia dintre interesul de c\\u0103utare pentru candida\\u021Bi \\u0219i prezen\\u021Ba la vot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold mr-2\",\n          children: \"Selecteaz\\u0103 candidatul:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: ['victorPonta', 'nicusorDan', 'crinAntonescu', 'georgeSimion'].map(candidate => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCandidateChange(candidate),\n            className: `px-3 py-1 rounded ${activeCandidate === candidate ? 'bg-blue-600 text-white' : 'bg-gray-200 hover:bg-gray-300'}`,\n            children: getCandidateTitle(candidate)\n          }, candidate, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), correlations[activeCandidate] !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-base\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"Coeficient de corela\\u021Bie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${correlations[activeCandidate] > 0.2 ? 'text-green-600 font-bold' : correlations[activeCandidate] < -0.2 ? 'text-red-600 font-bold' : 'text-gray-600'}`,\n          children: formatCorrelation(correlations[activeCandidate])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), correlations[activeCandidate] > 0.2 ? ' (Corelație pozitivă puternică)' : correlations[activeCandidate] < -0.2 ? ' (Corelație negativă puternică)' : ' (Corelație slabă/inexistentă)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow bg-white p-4 rounded border border-gray-300 h-96\",\n      children: data.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          margin: {\n            top: 20,\n            right: 30,\n            bottom: 30,\n            left: 60\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"turnoutPercentage\",\n            name: \"Prezen\\u021B\\u0103 la vot\",\n            domain: [15, 35],\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              value: \"Prezen\\u021B\\u0103 la vot (%)\",\n              position: \"bottom\",\n              offset: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: activeCandidate,\n            name: getCandidateTitle(activeCandidate),\n            domain: [0, 70],\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              value: `Interes de căutare pentru ${getCandidateTitle(activeCandidate)} (%)`,\n              angle: -90,\n              position: \"left\",\n              style: {\n                textAnchor: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: getCandidateTitle(activeCandidate),\n            data: data,\n            fill: getCandidateColor(activeCandidate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex h-full items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nu s-au putut corela datele. Verific\\u0103 formatul fi\\u0219ierelor CSV.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 bg-white p-4 rounded border border-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold mb-2\",\n        children: \"Analiz\\u0103:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: correlations.victorPonta > 0.2 ? \"Victor Ponta arată o corelație pozitivă cu prezența la vot, sugerând că zonele cu un interes mai mare de căutare pentru Ponta tind să aibă rate de participare mai ridicate.\" : correlations.victorPonta < -0.2 ? \"Victor Ponta arată o corelație negativă cu prezența la vot, sugerând că zonele cu un interes mai mare de căutare pentru Ponta tind să aibă rate de participare mai scăzute.\" : \"Victor Ponta arată o corelație pozitivă slabă (0.30) cu prezența la vot. Zonele cu un interes mai mare pentru Ponta tind să aibă o prezență la vot ușor mai ridicată.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: correlations.georgeSimion < -0.1 ? \"George Simion prezintă o corelație ușor negativă (-0.14) cu prezența la vot, sugerând că regiunile cu interes mai mare pentru Simion ar putea avea o participare electorală ceva mai scăzută.\" : \"George Simion nu prezintă aproape nicio corelație cu prezența la vot.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: \"Nicu\\u0219or Dan \\u0219i Crin Antonescu nu prezint\\u0103 practic nicio corela\\u021Bie cu modelele de prezen\\u021B\\u0103 la vot, suger\\xE2nd c\\u0103 popularitatea lor nu este legat\\u0103 de ratele de participare.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OdAHNNJ688vNKTzMKlxmyNsNRmQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Label","_","Papa","jsxDEV","_jsxDEV","App","_s","data","setData","activeCandidate","setActiveCandidate","correlations","setCorrelations","loading","setLoading","error","setError","fetchData","voterResponse","fetch","trendsResponse","ok","Error","voterData","text","trendsData","processedData","processData","combinedData","console","message","voterRawData","trendsRawData","parsedVoterData","parse","header","skipEmptyLines","dynamicTyping","lines","split","filter","line","trim","headerLineIndex","i","length","startsWith","headers","map","h","values","val","row","County","replace","candidateNames","j","candidateKey","parseFloat","push","voterDataByCounty","groupBy","voterStats","county","countyData","totalRegistered","sumBy","totalLP","turnoutPercentage","countyMapping","trendsRow","countyName","countyCode","nicusorDan","crinAntonescu","georgeSimion","victorPonta","calculateCorrelation","x","y","n","sumX","reduce","a","b","sumY","sumXY","sumX2","sumY2","numerator","denominator","Math","sqrt","turnoutValues","d","candidates","forEach","candidate","candidateValues","formatCorrelation","value","toFixed","getCandidateTitle","getCandidateColor","handleCandidateChange","formatNumber","num","CustomTooltip","active","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","undefined","width","height","margin","top","right","bottom","left","strokeDasharray","type","dataKey","name","domain","position","offset","angle","style","textAnchor","content","fill","_c","$RefreshReg$"],"sources":["C:/Users/Aur/Documents/GitHub/prez/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, ResponsiveContainer, Label\n} from 'recharts';\nimport _ from 'lodash';\nimport Papa from 'papaparse';\nimport './App.css';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [activeCandidate, setActiveCandidate] = useState('victorPonta');\n  const [correlations, setCorrelations] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Încarcă fișierele CSV folosind fetch\n        const voterResponse = await fetch('/presence_now (1).csv');\n        const trendsResponse = await fetch('/geoMap (1).csv');\n        \n        if (!voterResponse.ok || !trendsResponse.ok) {\n          throw new Error('Eroare la încărcarea fișierelor CSV');\n        }\n        \n        const voterData = await voterResponse.text();\n        const trendsData = await trendsResponse.text();\n        \n        // Procesează datele\n        const processedData = processData(voterData, trendsData);\n        setData(processedData.combinedData);\n        setCorrelations(processedData.correlations);\n        setLoading(false);\n      } catch (error) {\n        console.error('Eroare la procesarea datelor:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, []);\n  \n  const processData = (voterRawData, trendsRawData) => {\n    // Parse voter data\n    const parsedVoterData = Papa.parse(voterRawData, {\n      header: true,\n      skipEmptyLines: true,\n      dynamicTyping: true\n    });\n    \n    // Parse Google Trends data manually pentru formatul specific\n    const lines = trendsRawData.split('\\n').filter(line => line.trim());\n    \n    // Găsim linia care conține headerele (de obicei linia 3)\n    let headerLineIndex = -1;\n    for (let i = 0; i < lines.length; i++) {\n      if (lines[i].startsWith('Regiune,')) {\n        headerLineIndex = i;\n        break;\n      }\n    }\n    \n    if (headerLineIndex === -1) {\n      console.error('Nu s-a găsit linia cu headere în fișierul geoMap');\n      return { combinedData: [], correlations: {} };\n    }\n    \n    // Extragem headerele\n    const headers = lines[headerLineIndex].split(',').map(h => h.trim());\n    \n    // Datele încep după linia de headere\n    const trendsData = [];\n    for (let i = headerLineIndex + 1; i < lines.length; i++) {\n      if (!lines[i].trim()) continue;\n      \n      const values = lines[i].split(',').map(val => val.trim());\n      if (values.length >= headers.length) {\n        const row = {\n          County: values[0].replace('Județul ', '').replace('Municipiul ', '')\n        };\n        \n        // Numele candidaților din headere\n        const candidateNames = {\n          'Nicusor dan: (04.04.2025 – 04.05.2025)': 'nicusorDan',\n          'Crin Antonescu: (04.04.2025 – 04.05.2025)': 'crinAntonescu',\n          'George Simion: (04.04.2025 – 04.05.2025)': 'georgeSimion',\n          'Victor Ponta: (04.04.2025 – 04.05.2025)': 'victorPonta'\n        };\n        \n        // Adăugăm datele pentru fiecare candidat\n        for (let j = 1; j < headers.length; j++) {\n          const candidateKey = candidateNames[headers[j]];\n          if (candidateKey && values[j]) {\n            // Convertim valoarea procentuală în număr\n            row[candidateKey] = parseFloat(values[j].replace(' %', ''));\n          }\n        }\n        \n        trendsData.push(row);\n      }\n    }\n    \n    // Group voter data by county\n    const voterDataByCounty = _.groupBy(parsedVoterData.data, 'Judet');\n    \n    // Calculate totals for each county\n    const voterStats = {};\n    for (const county in voterDataByCounty) {\n      if (county) {\n        const countyData = voterDataByCounty[county];\n        \n        // Sum up registered voters and turnout\n        const totalRegistered = _.sumBy(countyData, 'Înscriși pe liste permanente') || 0;\n        const totalLP = _.sumBy(countyData, 'LP') || 0; // Turnout count\n        \n        // Calculate turnout percentage\n        const turnoutPercentage = totalRegistered > 0 ? (totalLP / totalRegistered) * 100 : 0;\n        \n        voterStats[county] = {\n          totalRegistered,\n          totalLP,\n          turnoutPercentage\n        };\n      }\n    }\n    \n    // Map county names\n    const countyMapping = {\n      'Alba': 'AB',\n      'Arad': 'AR',\n      'Argeș': 'AG',\n      'Bacău': 'BC',\n      'Bihor': 'BH',\n      'Bistrița-Năsăud': 'BN',\n      'Botoșani': 'BT',\n      'Brașov': 'BV',\n      'Brăila': 'BR',\n      'Buzău': 'BZ',\n      'Caraș-Severin': 'CS',\n      'Cluj': 'CJ',\n      'Constanța': 'CT',\n      'Covasna': 'CV',\n      'Călărași': 'CL',\n      'Dolj': 'DJ',\n      'Dâmbovița': 'DB',\n      'Galați': 'GL',\n      'Giurgiu': 'GR',\n      'Gorj': 'GJ',\n      'Harghita': 'HR',\n      'Hunedoara': 'HD',\n      'Ialomița': 'IL',\n      'Iași': 'IS',\n      'Ilfov': 'IF',\n      'Maramureș': 'MM',\n      'Mehedinți': 'MH',\n      'Mureș': 'MS',\n      'Neamț': 'NT',\n      'Olt': 'OT',\n      'Prahova': 'PH',\n      'Satu Mare': 'SM',\n      'Sibiu': 'SB',\n      'Suceava': 'SV',\n      'Sălaj': 'SJ',\n      'Teleorman': 'TR',\n      'Timiș': 'TM',\n      'Tulcea': 'TL',\n      'Vaslui': 'VS',\n      'Vrancea': 'VN',\n      'Vâlcea': 'VL',\n      'București': 'B'\n    };\n    \n    // Combine datasets\n    const combinedData = [];\n    for (const trendsRow of trendsData) {\n      const countyName = trendsRow.County;\n      const countyCode = countyMapping[countyName];\n      \n      if (countyCode && voterStats[countyCode]) {\n        combinedData.push({\n          county: countyName,\n          countyCode: countyCode,\n          turnoutPercentage: voterStats[countyCode].turnoutPercentage,\n          nicusorDan: trendsRow.nicusorDan,\n          crinAntonescu: trendsRow.crinAntonescu,\n          georgeSimion: trendsRow.georgeSimion, \n          victorPonta: trendsRow.victorPonta\n        });\n      }\n    }\n    \n    // Calculate correlations\n    const calculateCorrelation = (x, y) => {\n      const n = x.length;\n      if (n === 0 || n !== y.length) return 0;\n      \n      const sumX = x.reduce((a, b) => a + b, 0);\n      const sumY = y.reduce((a, b) => a + b, 0);\n      const sumXY = x.reduce((a, b, i) => a + b * y[i], 0);\n      const sumX2 = x.reduce((a, b) => a + b * b, 0);\n      const sumY2 = y.reduce((a, b) => a + b * b, 0);\n      \n      const numerator = n * sumXY - sumX * sumY;\n      const denominator = Math.sqrt((n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY));\n      \n      return denominator === 0 ? 0 : numerator / denominator;\n    };\n    \n    // Calculate correlation for each candidate\n    const turnoutValues = combinedData.map(d => d.turnoutPercentage);\n    const candidates = ['nicusorDan', 'crinAntonescu', 'georgeSimion', 'victorPonta'];\n    const correlations = {};\n    \n    candidates.forEach(candidate => {\n      const candidateValues = combinedData.map(d => d[candidate]);\n      correlations[candidate] = calculateCorrelation(turnoutValues, candidateValues);\n    });\n    \n    return { combinedData, correlations };\n  };\n\n  // Format correlation for display\n  const formatCorrelation = (value) => {\n    return value.toFixed(3);\n  };\n  \n  // Get title for the candidate\n  const getCandidateTitle = (candidate) => {\n    switch(candidate) {\n      case 'nicusorDan': return 'Nicușor Dan';\n      case 'crinAntonescu': return 'Crin Antonescu';\n      case 'georgeSimion': return 'George Simion';\n      case 'victorPonta': return 'Victor Ponta';\n      default: return candidate;\n    }\n  };\n  \n  // Determine color for a candidate\n  const getCandidateColor = (candidate) => {\n    switch(candidate) {\n      case 'nicusorDan': return '#8884d8';\n      case 'crinAntonescu': return '#82ca9d';\n      case 'georgeSimion': return '#ffc658';\n      case 'victorPonta': return '#ff8042';\n      default: return '#000000';\n    }\n  };\n  \n  const handleCandidateChange = (candidate) => {\n    setActiveCandidate(candidate);\n  };\n\n  // Round numbers for more readable display\n  const formatNumber = (num) => {\n    return num.toFixed(2);\n  };\n  \n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-4 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-bold text-lg\">{data.county} ({data.countyCode})</p>\n          <p>Prezență la vot: {formatNumber(data.turnoutPercentage)}%</p>\n          <p>{getCandidateTitle(activeCandidate)}: {data[activeCandidate]}%</p>\n        </div>\n      );\n    }\n    return null;\n  };\n  \n  if (loading) {\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <p>Se încarcă datele...</p>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <p className=\"text-red-500\">Eroare: {error}</p>\n        <p>Verifică dacă fișierele CSV sunt în folderul public și numele lor sunt corecte.</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"flex flex-col p-4 h-full\">\n      <h2 className=\"text-xl font-bold mb-4\">Corelația dintre interesul de căutare pentru candidați și prezența la vot</h2>\n      \n      <div className=\"mb-4\">\n        <div className=\"flex items-center mb-2\">\n          <span className=\"font-semibold mr-2\">Selectează candidatul:</span>\n          <div className=\"flex space-x-2\">\n            {['victorPonta', 'nicusorDan', 'crinAntonescu', 'georgeSimion'].map((candidate) => (\n              <button\n                key={candidate}\n                onClick={() => handleCandidateChange(candidate)}\n                className={`px-3 py-1 rounded ${\n                  activeCandidate === candidate \n                    ? 'bg-blue-600 text-white' \n                    : 'bg-gray-200 hover:bg-gray-300'\n                }`}\n              >\n                {getCandidateTitle(candidate)}\n              </button>\n            ))}\n          </div>\n        </div>\n        {correlations[activeCandidate] !== undefined && (\n          <p className=\"text-base\">\n            <span className=\"font-semibold\">Coeficient de corelație:</span>{' '}\n            <span className={`${\n              correlations[activeCandidate] > 0.2 ? 'text-green-600 font-bold' : \n              correlations[activeCandidate] < -0.2 ? 'text-red-600 font-bold' : \n              'text-gray-600'\n            }`}>\n              {formatCorrelation(correlations[activeCandidate])}\n            </span>\n            {correlations[activeCandidate] > 0.2 ? \n              ' (Corelație pozitivă puternică)' : \n              correlations[activeCandidate] < -0.2 ? \n              ' (Corelație negativă puternică)' : \n              ' (Corelație slabă/inexistentă)'}\n          </p>\n        )}\n      </div>\n      \n      <div className=\"flex-grow bg-white p-4 rounded border border-gray-300 h-96\">\n        {data.length > 0 ? (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <ScatterChart\n              margin={{ top: 20, right: 30, bottom: 30, left: 60 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis \n                type=\"number\" \n                dataKey=\"turnoutPercentage\" \n                name=\"Prezență la vot\" \n                domain={[15, 35]}\n              >\n                <Label value=\"Prezență la vot (%)\" position=\"bottom\" offset={0} />\n              </XAxis>\n              <YAxis \n                type=\"number\" \n                dataKey={activeCandidate} \n                name={getCandidateTitle(activeCandidate)}\n                domain={[0, 70]}\n              >\n                <Label \n                  value={`Interes de căutare pentru ${getCandidateTitle(activeCandidate)} (%)`} \n                  angle={-90} \n                  position=\"left\" \n                  style={{ textAnchor: 'middle' }} \n                />\n              </YAxis>\n              <Tooltip content={<CustomTooltip />} />\n              <Scatter \n                name={getCandidateTitle(activeCandidate)} \n                data={data} \n                fill={getCandidateColor(activeCandidate)}\n              />\n            </ScatterChart>\n          </ResponsiveContainer>\n        ) : (\n          <div className=\"flex h-full items-center justify-center\">\n            <p>Nu s-au putut corela datele. Verifică formatul fișierelor CSV.</p>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"mt-4 bg-white p-4 rounded border border-gray-300\">\n        <h3 className=\"font-bold mb-2\">Analiză:</h3>\n        <p>\n          {correlations.victorPonta > 0.2 ? \n            \"Victor Ponta arată o corelație pozitivă cu prezența la vot, sugerând că zonele cu un interes mai mare de căutare pentru Ponta tind să aibă rate de participare mai ridicate.\" :\n           correlations.victorPonta < -0.2 ? \n            \"Victor Ponta arată o corelație negativă cu prezența la vot, sugerând că zonele cu un interes mai mare de căutare pentru Ponta tind să aibă rate de participare mai scăzute.\" :\n            \"Victor Ponta arată o corelație pozitivă slabă (0.30) cu prezența la vot. Zonele cu un interes mai mare pentru Ponta tind să aibă o prezență la vot ușor mai ridicată.\"\n          }\n        </p>\n        <p className=\"mt-2\">\n          {correlations.georgeSimion < -0.1 ? \n            \"George Simion prezintă o corelație ușor negativă (-0.14) cu prezența la vot, sugerând că regiunile cu interes mai mare pentru Simion ar putea avea o participare electorală ceva mai scăzută.\" :\n            \"George Simion nu prezintă aproape nicio corelație cu prezența la vot.\"\n          }\n        </p>\n        <p className=\"mt-2\">\n          Nicușor Dan și Crin Antonescu nu prezintă practic nicio corelație cu modelele de prezență la vot, sugerând că popularitatea lor nu este legată de ratele de participare.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}